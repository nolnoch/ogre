.TH "TileGame" 3 "Wed Apr 2 2014" "OGRE Game" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TileGame \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <TileGame\&.h>\fP
.PP
Inherits \fBBaseGame\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTileGame\fP (void)"
.br
.ti -1c
.RI "virtual \fB~TileGame\fP (void)"
.br
.ti -1c
.RI "Ogre::RenderWindow * \fBgetWindow\fP (void)"
.br
.ti -1c
.RI "Ogre::Timer * \fBgetTimer\fP (void)"
.br
.ti -1c
.RI "OIS::Mouse * \fBgetMouse\fP (void)"
.br
.ti -1c
.RI "OIS::Keyboard * \fBgetKeyboard\fP (void)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBconfigure\fP (void)"
.br
.ti -1c
.RI "virtual void \fBcreateCamera\fP (void)"
.br
.ti -1c
.RI "virtual void \fBcreateScene\fP (void)"
.br
.ti -1c
.RI "virtual void \fBcreateFrameListener\fP (void)"
.br
.ti -1c
.RI "virtual bool \fBframeRenderingQueued\fP (const Ogre::FrameEvent &evt)"
.br
.ti -1c
.RI "virtual bool \fBkeyPressed\fP (const OIS::KeyEvent &arg)"
.br
.ti -1c
.RI "virtual bool \fBmousePressed\fP (const OIS::MouseEvent &arg, OIS::MouseButtonID id)"
.br
.ti -1c
.RI "virtual bool \fBmouseReleased\fP (const OIS::MouseEvent &arg, OIS::MouseButtonID id)"
.br
.ti -1c
.RI "void \fBshootBall\fP (int idx, int x, int y, int z, double force)"
.br
.ti -1c
.RI "void \fBballSetup\fP (int cubeSize)"
.br
.ti -1c
.RI "void \fBlevelSetup\fP (int num)"
.br
.ti -1c
.RI "void \fBlevelTearDown\fP ()"
.br
.ti -1c
.RI "void \fBsetLevel\fP (int num)"
.br
.ti -1c
.RI "void \fBdrawPlayers\fP ()"
.br
.ti -1c
.RI "void \fBmovePlayers\fP ()"
.br
.ti -1c
.RI "void \fBupdatePlayers\fP (double force=0, Ogre::Vector3 dir=Ogre::Vector3::ZERO)"
.br
.ti -1c
.RI "void \fBupdateServer\fP (double force=0, Ogre::Vector3 dir=Ogre::Vector3::ZERO)"
.br
.ti -1c
.RI "void \fBstartMultiplayer\fP ()"
.br
.ti -1c
.RI "void \fBaddPlayer\fP (Uint32 *data)"
.br
.ti -1c
.RI "void \fBmodifyPlayer\fP (int j, Uint32 *data)"
.br
.ti -1c
.RI "void \fBnotifyPlayers\fP ()"
.br
.ti -1c
.RI "void \fBnotifyServer\fP ()"
.br
.ti -1c
.RI "void \fBsimonSaysAnim\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "Ogre::Timer * \fBmTimer\fP"
.br
.ti -1c
.RI "Ogre::Timer \fBtimer\fP"
.br
.ti -1c
.RI "Ogre::Timer * \fBnetTimer\fP"
.br
.ti -1c
.RI "Ogre::SceneNode * \fBheadNode\fP"
.br
.ti -1c
.RI "Ogre::Light * \fBpanelLight\fP"
.br
.ti -1c
.RI "Ogre::Vector3 \fBmDirection\fP"
.br
.ti -1c
.RI "Ogre::Real \fBmSpeed\fP"
.br
.ti -1c
.RI "std::deque< Ogre::Entity * > \fBallTileEntities\fP"
.br
.ti -1c
.RI "std::deque< Ogre::SceneNode * > \fBtileList\fP"
.br
.ti -1c
.RI "std::deque< Ogre::Entity * > \fBtileEntities\fP"
.br
.ti -1c
.RI "std::deque< Ogre::SceneNode * > \fBtileSceneNodes\fP"
.br
.ti -1c
.RI "std::vector< Ogre::Entity * > \fBplayerEntities\fP"
.br
.ti -1c
.RI "std::vector< Ogre::SceneNode * > \fBplayerNodes\fP"
.br
.ti -1c
.RI "std::vector< \fBPlayerData\fP * > \fBplayerData\fP"
.br
.ti -1c
.RI "std::vector< \fBPlayerOldData\fP * > \fBplayerOldData\fP"
.br
.ti -1c
.RI "OgreBites::ParamsPanel * \fBscorePanel\fP"
.br
.ti -1c
.RI "OgreBites::ParamsPanel * \fBplayersWaitingPanel\fP"
.br
.ti -1c
.RI "OgreBites::Label * \fBcongratsPanel\fP"
.br
.ti -1c
.RI "OgreBites::Label * \fBchargePanel\fP"
.br
.ti -1c
.RI "OgreBites::Label * \fBclientAcceptDescPanel\fP"
.br
.ti -1c
.RI "OgreBites::Label * \fBclientAcceptOptPanel\fP"
.br
.ti -1c
.RI "OgreBites::Label * \fBserverStartPanel\fP"
.br
.ti -1c
.RI "Ogre::Overlay * \fBcrosshairOverlay\fP"
.br
.ti -1c
.RI "\fBTileSimulator\fP * \fBsim\fP"
.br
.ti -1c
.RI "\fBBallManager\fP * \fBballMgr\fP"
.br
.ti -1c
.RI "\fBSoundManager\fP * \fBsoundMgr\fP"
.br
.ti -1c
.RI "\fBNetManager\fP * \fBnetMgr\fP"
.br
.ti -1c
.RI "\fBSoundFile\fP \fBboing\fP"
.br
.ti -1c
.RI "\fBSoundFile\fP \fBgong\fP"
.br
.ti -1c
.RI "\fBSoundFile\fP \fBmusic\fP"
.br
.ti -1c
.RI "\fBSoundFile\fP \fBchirp\fP"
.br
.ti -1c
.RI "std::vector< \fBSoundFile\fP > \fBnoteSequence\fP"
.br
.ti -1c
.RI "int \fBnoteIndex\fP"
.br
.ti -1c
.RI "bool \fBpaused\fP"
.br
.ti -1c
.RI "bool \fBgameStart\fP"
.br
.ti -1c
.RI "bool \fBgameDone\fP"
.br
.ti -1c
.RI "bool \fBanimDone\fP"
.br
.ti -1c
.RI "bool \fBisCharging\fP"
.br
.ti -1c
.RI "bool \fBconnected\fP"
.br
.ti -1c
.RI "bool \fBserver\fP"
.br
.ti -1c
.RI "bool \fBnetActive\fP"
.br
.ti -1c
.RI "bool \fBinvitePending\fP"
.br
.ti -1c
.RI "bool \fBinviteAccepted\fP"
.br
.ti -1c
.RI "bool \fBmultiplayerStarted\fP"
.br
.ti -1c
.RI "int \fBscore\fP"
.br
.ti -1c
.RI "int \fBshotsFired\fP"
.br
.ti -1c
.RI "int \fBcurrLevel\fP"
.br
.ti -1c
.RI "int \fBcurrTile\fP"
.br
.ti -1c
.RI "int \fBwinTimer\fP"
.br
.ti -1c
.RI "int \fBtileCounter\fP"
.br
.ti -1c
.RI "int \fBchargeShot\fP"
.br
.ti -1c
.RI "int \fBnPlayers\fP"
.br
.ti -1c
.RI "double \fBslowdownval\fP"
.br
.ti -1c
.RI "std::string \fBinvite\fP"
.br
.ti -1c
.RI "int \fBballsounddelay\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "TileGame::TileGame (void)"

.SS "TileGame::~TileGame (void)\fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void TileGame::addPlayer (Uint32 *data)\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::ballSetup (intcubeSize)\fC [inline]\fP, \fC [protected]\fP"

.SS "bool TileGame::configure (void)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBBaseGame\fP\&.
.SS "void TileGame::createCamera (void)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBBaseGame\fP\&.
.SS "void TileGame::createFrameListener (void)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBBaseGame\fP\&.
.SS "void TileGame::createScene (void)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Implements \fBBaseGame\fP\&.
.SS "void TileGame::drawPlayers ()\fC [inline]\fP, \fC [protected]\fP"

.SS "bool TileGame::frameRenderingQueued (const Ogre::FrameEvent &evt)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBBaseGame\fP\&.
.SS "OIS::Keyboard* TileGame::getKeyboard (void)\fC [inline]\fP"

.SS "OIS::Mouse* TileGame::getMouse (void)\fC [inline]\fP"

.SS "Ogre::Timer* TileGame::getTimer (void)\fC [inline]\fP"

.SS "Ogre::RenderWindow* TileGame::getWindow (void)\fC [inline]\fP"

.SS "bool TileGame::keyPressed (const OIS::KeyEvent &arg)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBBaseGame\fP\&.
.SS "void TileGame::levelSetup (intnum)\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::levelTearDown ()\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::modifyPlayer (intj, Uint32 *data)\fC [inline]\fP, \fC [protected]\fP"

.SS "bool TileGame::mousePressed (const OIS::MouseEvent &arg, OIS::MouseButtonIDid)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBBaseGame\fP\&.
.SS "bool TileGame::mouseReleased (const OIS::MouseEvent &arg, OIS::MouseButtonIDid)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBBaseGame\fP\&.
.SS "void TileGame::movePlayers ()\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::notifyPlayers ()\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::notifyServer ()\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::setLevel (intnum)\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::shootBall (intidx, intx, inty, intz, doubleforce)\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::simonSaysAnim ()\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::startMultiplayer ()\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::updatePlayers (doubleforce = \fC0\fP, Ogre::Vector3dir = \fCOgre::Vector3::ZERO\fP)\fC [inline]\fP, \fC [protected]\fP"

.SS "void TileGame::updateServer (doubleforce = \fC0\fP, Ogre::Vector3dir = \fCOgre::Vector3::ZERO\fP)\fC [inline]\fP, \fC [protected]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::deque<Ogre::Entity *> TileGame::allTileEntities\fC [protected]\fP"

.SS "bool TileGame::animDone\fC [protected]\fP"

.SS "\fBBallManager\fP* TileGame::ballMgr\fC [protected]\fP"

.SS "int TileGame::ballsounddelay\fC [protected]\fP"

.SS "\fBSoundFile\fP TileGame::boing\fC [protected]\fP"

.SS "OgreBites::Label * TileGame::chargePanel\fC [protected]\fP"

.SS "int TileGame::chargeShot\fC [protected]\fP"

.SS "\fBSoundFile\fP TileGame::chirp\fC [protected]\fP"

.SS "OgreBites::Label * TileGame::clientAcceptDescPanel\fC [protected]\fP"

.SS "OgreBites::Label * TileGame::clientAcceptOptPanel\fC [protected]\fP"

.SS "OgreBites::Label* TileGame::congratsPanel\fC [protected]\fP"

.SS "bool TileGame::connected\fC [protected]\fP"

.SS "Ogre::Overlay* TileGame::crosshairOverlay\fC [protected]\fP"

.SS "int TileGame::currLevel\fC [protected]\fP"

.SS "int TileGame::currTile\fC [protected]\fP"

.SS "bool TileGame::gameDone\fC [protected]\fP"

.SS "bool TileGame::gameStart\fC [protected]\fP"

.SS "\fBSoundFile\fP TileGame::gong\fC [protected]\fP"

.SS "Ogre::SceneNode* TileGame::headNode\fC [protected]\fP"

.SS "std::string TileGame::invite\fC [protected]\fP"

.SS "bool TileGame::inviteAccepted\fC [protected]\fP"

.SS "bool TileGame::invitePending\fC [protected]\fP"

.SS "bool TileGame::isCharging\fC [protected]\fP"

.SS "Ogre::Vector3 TileGame::mDirection\fC [protected]\fP"

.SS "Ogre::Real TileGame::mSpeed\fC [protected]\fP"

.SS "Ogre::Timer* TileGame::mTimer\fC [protected]\fP"

.SS "bool TileGame::multiplayerStarted\fC [protected]\fP"

.SS "\fBSoundFile\fP TileGame::music\fC [protected]\fP"

.SS "bool TileGame::netActive\fC [protected]\fP"

.SS "\fBNetManager\fP* TileGame::netMgr\fC [protected]\fP"

.SS "Ogre::Timer * TileGame::netTimer\fC [protected]\fP"

.SS "int TileGame::noteIndex\fC [protected]\fP"

.SS "std::vector<\fBSoundFile\fP> TileGame::noteSequence\fC [protected]\fP"

.SS "int TileGame::nPlayers\fC [protected]\fP"

.SS "Ogre::Light* TileGame::panelLight\fC [protected]\fP"

.SS "bool TileGame::paused\fC [protected]\fP"

.SS "std::vector<\fBPlayerData\fP *> TileGame::playerData\fC [protected]\fP"

.SS "std::vector<Ogre::Entity *> TileGame::playerEntities\fC [protected]\fP"

.SS "std::vector<Ogre::SceneNode *> TileGame::playerNodes\fC [protected]\fP"

.SS "std::vector<\fBPlayerOldData\fP *> TileGame::playerOldData\fC [protected]\fP"

.SS "OgreBites::ParamsPanel * TileGame::playersWaitingPanel\fC [protected]\fP"

.SS "int TileGame::score\fC [protected]\fP"

.SS "OgreBites::ParamsPanel* TileGame::scorePanel\fC [protected]\fP"

.SS "bool TileGame::server\fC [protected]\fP"

.SS "OgreBites::Label * TileGame::serverStartPanel\fC [protected]\fP"

.SS "int TileGame::shotsFired\fC [protected]\fP"

.SS "\fBTileSimulator\fP* TileGame::sim\fC [protected]\fP"

.SS "double TileGame::slowdownval\fC [protected]\fP"

.SS "\fBSoundManager\fP* TileGame::soundMgr\fC [protected]\fP"

.SS "int TileGame::tileCounter\fC [protected]\fP"

.SS "std::deque<Ogre::Entity *> TileGame::tileEntities\fC [protected]\fP"

.SS "std::deque<Ogre::SceneNode *> TileGame::tileList\fC [protected]\fP"

.SS "std::deque<Ogre::SceneNode *> TileGame::tileSceneNodes\fC [protected]\fP"

.SS "Ogre::Timer TileGame::timer\fC [protected]\fP"

.SS "int TileGame::winTimer\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for OGRE Game from the source code\&.
